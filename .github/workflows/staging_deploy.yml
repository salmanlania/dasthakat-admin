name: üöÄ Deploy Staging Frontend and APIs

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    name: üéâ Deploy Frontend and APIs
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the latest code
      - name: üöö Get latest code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Create `.env` file for React (Vite)
      - name: üìù Create .env file for React
        working-directory: frontend
        run: |
          printf "VITE_BASE_URL=${{ secrets.BASE_PATH }}\n" > .env

      # Step 4: Install & Build Frontend
      - name: üîß Setup Node.js & Build Frontend
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: üì¶ Install & Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # Step 3: Generate `.htaccess` file inside frontend/dist/
      - name: üìù Create .htaccess File
        run: |
          echo "<IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteBase /${{ secrets.BASE_PATH }}/

          # Redirect Trailing Slashes...
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^(.*)/$ /$1 [L,R=301]

          # Handle Front Controller...
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^ index.html [L]
          </IfModule>" > frontend/dist/.htaccess

      # Step 5: Deploy Frontend & .htaccess Together
      - name: üöÄ Deploy Frontend & .htaccess
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "frontend/dist/"
          server-dir: "public_html/${{ secrets.BASE_PATH }}/"
          include: ".htaccess"

      # Step 6: Create API `.env` file
      - name: üìù Create API .env file
        working-directory: api
        run: |
          cat <<EOF > .env
          APP_NAME=${{ secrets.APP_NAME }}
          APP_ENV=${{ secrets.APP_ENV }}
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=true
          APP_URL=${{ secrets.API_URL }}
          APP_TIMEZONE=${{ secrets.APP_TIMEZONE }}

          LOG_CHANNEL=stack
          LOG_SLACK_WEBHOOK_URL=${{ secrets.LOG_SLACK_WEBHOOK_URL }}

          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_NAME }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          CACHE_DRIVER=file
          QUEUE_CONNECTION=sync

          MAIL_MAILER=${{ secrets.MAILER }}
          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_ENCRYPTION=tls
          MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}
          MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}
          EOF

      # Step 7: Install Composer Dependencies (Always Run)
      - name: üì• Install Composer Dependencies
        working-directory: api
        run: |
          composer update --no-dev --optimize-autoloader --prefer-dist --no-progress --no-interaction
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.GITHUB_TOKEN }}"}}'

     
    
     # Step 8: Deploy API
      - name: üöÄ Deploy API
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "api/"
          server-dir: "public_html${{ secrets.BASE_PATH }}/api/"

      # Step 9: Run Migrations via API
      - name: üîÑ Run Migrations
        run: |
          curl -X GET "${{ secrets.API_URL }}/run-migrations" -H "X-DEPLOY-TOKEN: ${{ secrets.APP_KEY }}"
