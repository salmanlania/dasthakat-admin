name: Staging Deploy to cPanel via FTP

on:
  push:
    branches:
    - development

jobs:
  frontend-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Create Frontend .env
      working-directory: frontend
      run: echo "VITE_BASE_URL=${{ secrets.FRONTEND_DIR }}" > .env

    - name: Install & Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build 

    - name: Debug dist index.html
      run: cat frontend/dist/index.html


    - name: Upload Frontend Build
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: frontend/dist/
        server-dir: /public_html/${{ secrets.FRONTEND_DIR }}
        dangerous-clean-slate: false
        exclude: |
          config.json

  backend-deploy:
    name: Deploy Backend
    needs: frontend-deploy # Waits for frontend to complete
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Composer Dependencies
      working-directory: api
      run: |
        composer update
        zip -r vendor.zip vendor

    - name: Upload API (without vendor)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: api/
        server-dir: ${{ secrets.BACKEND_DIR }}
        exclude: |
          vendor/**

  live-actions:
    name: Run Live Actions
    needs: backend-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Remote Vendor Unzip
      run: |
        curl -X GET "${{ secrets.APP_URL }}api/deployKit/unzip.php" \
        -H "X-DEPLOY-TOKEN: ${{ secrets.APP_KEY }}"

    - name: Trigger Remote Migrations
      run: |
        curl -X GET ${{ secrets.APP_URL }}api/deploy/migrations \
        -H "X-DEPLOY-TOKEN: ${{ secrets.APP_KEY }}"
