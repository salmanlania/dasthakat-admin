name: Development Deploy to cPanel via FTP

on:
  push:
    branches:
    - develope

jobs:
  frontend-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Create Frontend .env
      working-directory: frontend
      run: echo "VITE_BASE_URL=/gms/dev" > .env

    - name: Install & Build Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build 

    - name: Debug dist index.html
      run: cat frontend/dist/index.html


    - name: Upload Frontend Build
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: frontend/dist/
        server-dir: /public_html/gms/dev/
        dangerous-clean-slate: false
        exclude: |
          config.json

    - name: Upload config.json if missing
      run: |
        set -e
        URL="https://dev82.bharmalsystems.net/gms/dev/config.json"
        STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
        if [ "$STATUS" -eq 200 ]; then
          echo "config.json already exists on server. Skipping upload."
        else
          echo "config.json not found on server (status=$STATUS). Uploading..."
          if [ ! -f frontend/dist/config.json ]; then
            echo "Error: frontend/dist/config.json does not exist in build output." >&2
            exit 1
          fi
          curl --ftp-create-dirs \
               --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" \
               -T frontend/dist/config.json \
               "ftp://${{ secrets.FTP_HOST }}/public_html/gms/dev/config.json"
          echo "config.json uploaded."
        fi

    - name: Ensure .htaccess present in dev root
      run: |
        printf '%s\n' \
        '<IfModule mod_rewrite.c>' \
        '  RewriteEngine On' \
        '  RewriteBase /gms/dev/' \
        '' \
        '  # Redirect Trailing Slashes...' \
        '  RewriteCond %{REQUEST_FILENAME} !-d' \
        '  RewriteRule ^(.*)/$ /$1 [L,R=301]' \
        '' \
        '  # Handle Front Controller...' \
        '  RewriteCond %{REQUEST_FILENAME} !-f' \
        '  RewriteCond %{REQUEST_FILENAME} !-d' \
        '  RewriteRule ^ index.html [L]' \
        '</IfModule>' \
        > /tmp/htaccess_testing
        curl --ftp-create-dirs \
             --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" \
             -T /tmp/htaccess_testing \
             "ftp://${{ secrets.FTP_HOST }}/public_html/gms/dev/.htaccess"
        echo ".htaccess uploaded to dev root."
  
  backend-deploy:
    name: Deploy Backend
    needs: frontend-deploy # Waits for frontend to complete
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Composer Dependencies
      working-directory: api
      run: |
        composer update
        zip -r vendor.zip vendor

    - name: Upload API (without vendor)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: api/
        server-dir: /public_html/gms/dev/api/
        exclude: |
          vendor/**

    - name: Upload Tools (for live actions)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: tools/
        server-dir: /public_html/gms/dev/tools/
        dangerous-clean-slate: false

  live-actions:
    name: Run Live Actions
    needs: backend-deploy
    runs-on: ubuntu-latest

    
    steps:
    - name: Trigger Remote Vendor Unzip
      run: |
        curl -X GET "https://dev82.bharmalsystems.net/gms/dev/tools/unzip.php" \
        -H "X-DEPLOY-TOKEN: ${{ secrets.DEV_APP_KEY }}"

    - name: Trigger Remote Migrations
      run: |
        curl -X GET "https://dev82.bharmalsystems.net/gms/dev/api/deploy/migrations" \
        -H "X-DEPLOY-TOKEN: ${{ secrets.DEV_APP_KEY }}"
