name: Log commit to Google Sheet

on:
  push:

jobs:
  log-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install gspread oauth2client

      - name: Insert commit into Google Sheet
        env:
          GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          echo "$GOOGLE_SHEETS_CREDENTIALS" > creds.json

          python3 <<EOF
          import gspread
          from oauth2client.service_account import ServiceAccountCredentials
          import os
          import subprocess
          from datetime import datetime
          import re

          # Auth
          scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
          creds = ServiceAccountCredentials.from_json_keyfile_name('creds.json', scope)
          client = gspread.authorize(creds)

          # Get latest commit info
          commit_hash = subprocess.check_output(["git", "rev-parse", "HEAD"]).decode("utf-8").strip()
          author_name = subprocess.check_output(["git", "log", "-1", "--pretty=format:%an"]).decode("utf-8").strip()
          author_email = subprocess.check_output(["git", "log", "-1", "--pretty=format:%ae"]).decode("utf-8").strip()
          raw_date = subprocess.check_output(["git", "log", "-1", "--pretty=format:%ai"]).decode("utf-8").strip()
          parsed_date = datetime.strptime(raw_date, "%Y-%m-%d %H:%M:%S %z")
          date = parsed_date.strftime("%d-%m-%Y")
          message = subprocess.check_output(["git", "log", "-1", "--pretty=format:%s"]).decode("utf-8").strip()
          description = subprocess.check_output(["git", "log", "-1", "--pretty=format:%B"]).decode("utf-8").strip()

          # Email -> Sheet name mapping
          email_to_sheet = {
              "alirayyan.dev@gmail.com": "Rayaan",
              "salmanlania@gmail.com": "Salman"
              # Add more mappings here if needed
          }

          sheet_name = email_to_sheet.get(author_email)
          if not sheet_name:
              print(f"No matching sheet for email: {author_email}")
              exit(0)

          # Open sheet
          sheet = client.open_by_key(os.getenv('SHEET_ID')).worksheet(sheet_name)

          # Extract hours from commit description (e.g. hour=4)
          hours_match = re.search(r'hour=(\d+)', description, re.IGNORECASE)
          addTask_match = re.search(r'task=(\d+)', description, re.IGNORECASE)

          total_hours = int(hours_match.group(1)) if hours_match else 0
          # date_for_sheet = parsed_date.strftime("%d-%m-%Y").lstrip("'")
          date_for_sheet = parsed_date.strftime("%d-%m-%Y")
          addTask = addTask_match.group(1) if addTask_match else "0"
          project = "GMS"
          from_date = ""
          to_date = ""

          # Append to sheet only if task=1
          if addTask == "1":
              sheet.append_row([date_for_sheet, project, message, from_date, to_date, total_hours], value_input_option="USER_ENTERED")
          EOF
